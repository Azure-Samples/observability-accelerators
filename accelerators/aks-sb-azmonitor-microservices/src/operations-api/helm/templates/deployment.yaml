apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aks-sb-azmonitor-microservices.fullname" . }}
  labels:
    {{- include "aks-sb-azmonitor-microservices.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "aks-sb-azmonitor-microservices.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aks-sb-azmonitor-microservices.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: default
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: APPLICATIONINSIGHTS_VERSION
              value: 3.4.7
            - name: OPERATION_STATE_QUEUE_NAME
              value: operation-state
            - name: COSMOS_DB_DATABASE_NAME
              value: cargo
            - name: COSMOS_DB_CONTAINER_NAME
              value: operations
            - name: APPLICATIONINSIGHTS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: operations-api-secrets
                  key: AppInsightsConnectionString
            - name: SERVICEBUS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: operations-api-secrets
                  key: ServiceBusConnectionString
            - name: SERVICEBUS_PREFETCH_COUNT
              value: "10"
            - name: COSMOS_DB_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: operations-api-secrets
                  key: CosmosDBEndpoint
            - name: COSMOS_DB_KEY
              valueFrom:
                secretKeyRef:
                  name: operations-api-secrets
                  key: CosmosDBKey
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 10

          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            periodSeconds: 10
            failureThreshold: 30
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "aks-sb-azmonitor-microservices.fullname" . }}